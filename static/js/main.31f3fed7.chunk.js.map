{"version":3,"sources":["ContactForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","isSubmitted","setIsSubmitted","useState","formik","useFormik","initialValues","fullName","email","phone","message","updates","validationSchema","Yup","min","required","matches","onSubmit","values","_ref","resetForm","setTimeout","React","createElement","className","handleSubmit","FaUser","style","marginRight","name","type","onChange","handleChange","value","onBlur","handleBlur","touched","errors","FaEnvelope","FaPhone","FaCommentDots","checked","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.31f3fed7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FaUser, FaEnvelope, FaPhone, FaCommentDots } from 'react-icons/fa';\n\nconst ContactForm = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      email: '',\n      phone: '',\n      message: '',\n      updates: false,\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string()\n        .min(4, 'Імʼя має містити мінімум 4 символи')\n        .required('Це поле обов’язкове'),\n      email: Yup.string()\n        .email('Неправильна адреса електронної пошти')\n        .required('Це поле обов’язкове'),\n      phone: Yup.string()\n        .matches(/^\\+380\\d{9}$/, 'Формат телефону має бути +380XXXXXXXXX')\n        .required('Це поле обов’язкове'),\n      message: Yup.string()\n        .min(10, 'Повідомлення має бути не менше 10 символів')\n        .required('Це поле обов’язкове'),\n    }),\n    onSubmit: (values, { resetForm }) => {\n      setIsSubmitted(true);\n      setTimeout(() => {\n        setIsSubmitted(false);\n        resetForm();\n      }, 3000);\n    },\n  });\n\n  return (\n    <div className=\"form-wrapper\">\n      <h1>Зв'язатися з нами</h1>\n      <p>Залиш нам повідомлення, а ми відповімо якнайшвидше</p>\n\n      <form onSubmit={formik.handleSubmit}>\n        <label>\n          <FaUser style={{ marginRight: '8px' }} />\n          Імʼя та прізвище\n        </label>\n        <input\n          name=\"fullName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.fullName}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.fullName && formik.errors.fullName && (\n          <div className=\"error\">{formik.errors.fullName}</div>\n        )}\n\n        <label>\n          <FaEnvelope style={{ marginRight: '8px' }} />\n          Email\n        </label>\n        <input\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.email && formik.errors.email && (\n          <div className=\"error\">{formik.errors.email}</div>\n        )}\n\n        <label>\n          <FaPhone style={{ marginRight: '8px' }} />\n          Телефон (у форматі +380)\n        </label>\n        <input\n          name=\"phone\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.phone}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.phone && formik.errors.phone && (\n          <div className=\"error\">{formik.errors.phone}</div>\n        )}\n\n        <label>\n          <FaCommentDots style={{ marginRight: '8px' }} />\n          Повідомлення\n        </label>\n        <textarea\n          name=\"message\"\n          onChange={formik.handleChange}\n          value={formik.values.message}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.message && formik.errors.message && (\n          <div className=\"error\">{formik.errors.message}</div>\n        )}\n\n        <label>\n          <input\n            name=\"updates\"\n            type=\"checkbox\"\n            onChange={formik.handleChange}\n            checked={formik.values.updates}\n          />\n          Надсилати мені оновлення про академію\n        </label>\n\n        <button type=\"submit\">Надіслати</button>\n        <div className={`success ${isSubmitted ? 'show' : 'hide'}`}>\n          Ваш запит було надіслано!\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;","import React from 'react';\nimport './App.css';\nimport ContactForm from './ContactForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ContactForm />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}